syntax = "proto3";

package stock_trading.user_service;
option go_package = "github.com/sinhnguyen1411/stock-trading-be";

import "validate/validate.proto";
import "google/api/annotations.proto";
import "google/rpc/error_details.proto";

import "protoc-gen-swagger/options/annotations.proto";

service UserService {
  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      put: "/api/v1/user/register"
      body: "*"
    };
  }

  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/api/v1/user/login"
      body: "*"
    };
  }

  rpc Delete(DeleteRequest) returns (DeleteResponse) {
    option (google.api.http) = {
      delete: "/api/v1/user/{username}"
    };
  }

  rpc Get(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get: "/api/v1/user/{username}"
    };
  }

  rpc Update(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      patch: "/api/v1/user/{username}"
      body: "*"
    };
  }

  rpc ChangePassword(ChangePasswordRequest) returns (ChangePasswordResponse) {
    option (google.api.http) = {
      post: "/api/v1/user/{username}/password"
      body: "*"
    };
  }
}

message RegisterRequest {
  string username = 1 [(validate.rules).string = {min_len: 6, max_len: 16}];
  string password = 2 [(validate.rules).string = {min_len: 6, max_len: 16}];
  string email = 3 [(validate.rules).string = {min_len: 6, max_len: 64}];
  string name = 4 [(validate.rules).string = {min_len: 3, max_len: 64}];
  string cmnd = 5 [(validate.rules).string = {min_len: 6, max_len: 16}];
  int64 birthday = 6;
  bool gender = 7;
  string permanent_address = 8;
  string phone_number = 9 [(validate.rules).string = {min_len: 9, max_len: 13}];
}

message RegisterResponse {
  uint32 code = 1;
  string message = 2;
}

message LoginRequest {
  string username = 1 [(validate.rules).string = {min_len: 6, max_len: 16}];
  string password = 2 [(validate.rules).string = {min_len: 6, max_len: 16}];
}

message LoginResponse {
  uint32 code = 1;
  string message = 2;

  message Data {
    string token = 1;
  }

  Data data = 3;
}

message DeleteRequest {
  string username = 1 [(validate.rules).string = {min_len: 6, max_len: 16}];
}

message DeleteResponse {
  uint32 code = 1;
  string message = 2;
}

message GetUserRequest {
  string username = 1 [(validate.rules).string = {min_len: 6, max_len: 16}];
}

message GetUserResponse {
  uint32 code = 1;
  string message = 2;
  UserProfile data = 3;
}

message UserProfile {
  int64 id = 1;
  string username = 2;
  string name = 3;
  string email = 4;
  string cmnd = 5;
  int64 birthday = 6;
  bool gender = 7;
  string permanent_address = 8;
  string phone_number = 9;
  int64 created_at = 10;
  int64 updated_at = 11;
}

message UpdateUserRequest {
  string username = 1 [(validate.rules).string = {min_len: 6, max_len: 16}];
  string email = 2 [(validate.rules).string = {min_len: 6, max_len: 64}];
  string name = 3 [(validate.rules).string = {min_len: 3, max_len: 64}];
  string cmnd = 4 [(validate.rules).string = {min_len: 6, max_len: 16}];
  int64 birthday = 5;
  bool gender = 6;
  string permanent_address = 7;
  string phone_number = 8 [(validate.rules).string = {min_len: 9, max_len: 13}];
}

message UpdateUserResponse {
  uint32 code = 1;
  string message = 2;
}

message ChangePasswordRequest {
  string username = 1 [(validate.rules).string = {min_len: 6, max_len: 16}];
  string old_password = 2 [(validate.rules).string = {min_len: 6, max_len: 16}];
  string new_password = 3 [(validate.rules).string = {min_len: 6, max_len: 16}];
}

message ChangePasswordResponse {
  uint32 code = 1;
  string message = 2;
}
